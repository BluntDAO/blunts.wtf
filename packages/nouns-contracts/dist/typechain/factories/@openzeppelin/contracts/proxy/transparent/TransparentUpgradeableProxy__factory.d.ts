import { Signer, ContractFactory, PayableOverrides, BytesLike } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TransparentUpgradeableProxy, TransparentUpgradeableProxyInterface } from "../../../../../@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy";
declare type TransparentUpgradeableProxyConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class TransparentUpgradeableProxy__factory extends ContractFactory {
    constructor(...args: TransparentUpgradeableProxyConstructorParams);
    deploy(_logic: string, admin_: string, _data: BytesLike, overrides?: PayableOverrides & {
        from?: string | Promise<string>;
    }): Promise<TransparentUpgradeableProxy>;
    getDeployTransaction(_logic: string, admin_: string, _data: BytesLike, overrides?: PayableOverrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): TransparentUpgradeableProxy;
    connect(signer: Signer): TransparentUpgradeableProxy__factory;
    static readonly bytecode = "0x608060405260405162000e7338038062000e7383398101604081905262000026916200048f565b82816200005560017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd6200056f565b60008051602062000e2c8339815191521462000075576200007562000591565b6200008382826000620000e7565b50620000b3905060017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61046200056f565b60008051602062000e0c83398151915214620000d357620000d362000591565b620000de8262000119565b505050620005fa565b620000f2836200018b565b600082511180620001005750805b156200011457620001128383620001cd565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6200015b60008051602062000e0c833981519152546001600160a01b031690565b604080516001600160a01b03928316815291841660208301520160405180910390a16200018881620001fe565b50565b62000196816200029c565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060620001f5838360405180606001604052806027815260200162000e4c6027913962000319565b90505b92915050565b6001600160a01b038116620002695760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b8060008051602062000e0c8339815191525b80546001600160a01b0319166001600160a01b039290921691909117905550565b803b620003025760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840162000260565b8060008051602062000e2c8339815191526200027b565b6060833b6200037a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840162000260565b600080856001600160a01b031685604051620003979190620005a7565b600060405180830381855af49150503d8060008114620003d4576040519150601f19603f3d011682016040523d82523d6000602084013e620003d9565b606091505b509092509050620003ec828286620003f8565b925050505b9392505050565b6060831562000409575081620003f1565b8251156200041a5782518084602001fd5b8160405162461bcd60e51b8152600401620002609190620005c5565b80516001600160a01b03811681146200044e57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620004865781810151838201526020016200046c565b50506000910152565b600080600060608486031215620004a557600080fd5b620004b08462000436565b9250620004c06020850162000436565b60408501519092506001600160401b0380821115620004de57600080fd5b818601915086601f830112620004f357600080fd5b81518181111562000508576200050862000453565b604051601f8201601f19908116603f0116810190838211818310171562000533576200053362000453565b816040528281528960208487010111156200054d57600080fd5b6200056083602083016020880162000469565b80955050505050509250925092565b81810381811115620001f857634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052600160045260246000fd5b60008251620005bb81846020870162000469565b9190910192915050565b6020815260008251806020840152620005e681604085016020870162000469565b601f01601f19169190910160400192915050565b610802806200060a6000396000f3fe60806040526004361061004e5760003560e01c80633659cfe6146100655780634f1ef286146100855780635c60da1b146100985780638f283970146100c9578063f851a440146100e95761005d565b3661005d5761005b6100fe565b005b61005b6100fe565b34801561007157600080fd5b5061005b610080366004610694565b610118565b61005b6100933660046106af565b610155565b3480156100a457600080fd5b506100ad6101bc565b6040516001600160a01b03909116815260200160405180910390f35b3480156100d557600080fd5b5061005b6100e4366004610694565b6101ed565b3480156100f557600080fd5b506100ad61020d565b61010661022e565b6101166101116102c3565b6102cd565b565b6101206102f1565b6001600160a01b0316330361014d5761014a81604051806020016040528060008152506000610324565b50565b61014a6100fe565b61015d6102f1565b6001600160a01b031633036101b4576101af8383838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525060019250610324915050565b505050565b6101af6100fe565b60006101c66102f1565b6001600160a01b031633036101e2576101dd6102c3565b905090565b6101ea6100fe565b90565b6101f56102f1565b6001600160a01b0316330361014d5761014a8161034f565b60006102176102f1565b6001600160a01b031633036101e2576101dd6102f1565b6102366102f1565b6001600160a01b031633036101165760405162461bcd60e51b815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267606482015261195d60f21b608482015260a4015b60405180910390fd5b60006101dd6103a3565b3660008037600080366000845af43d6000803e8080156102ec573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b61032d836103cb565b60008251118061033a5750805b156101af57610349838361040b565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6103786102f1565b604080516001600160a01b03928316815291841660208301520160405180910390a161014a81610437565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610315565b6103d4816104e0565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061043083836040518060600160405280602781526020016107a66027913961056b565b9392505050565b6001600160a01b03811661049c5760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084016102ba565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80546001600160a01b0319166001600160a01b039290921691909117905550565b803b6105445760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016102ba565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc6104bf565b6060833b6105ca5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016102ba565b600080856001600160a01b0316856040516105e59190610756565b600060405180830381855af49150503d8060008114610620576040519150601f19603f3d011682016040523d82523d6000602084013e610625565b606091505b509150915061063582828661063f565b9695505050505050565b6060831561064e575081610430565b82511561065e5782518084602001fd5b8160405162461bcd60e51b81526004016102ba9190610772565b80356001600160a01b038116811461068f57600080fd5b919050565b6000602082840312156106a657600080fd5b61043082610678565b6000806000604084860312156106c457600080fd5b6106cd84610678565b9250602084013567ffffffffffffffff808211156106ea57600080fd5b818601915086601f8301126106fe57600080fd5b81358181111561070d57600080fd5b87602082850101111561071f57600080fd5b6020830194508093505050509250925092565b60005b8381101561074d578181015183820152602001610735565b50506000910152565b60008251610768818460208701610732565b9190910192915050565b6020815260008251806020840152610791816040850160208701610732565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c3f172f2717d9223dba74d9f64dd0462621ce63da9f288045e11273b73b5463b64736f6c63430008130033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564";
    static readonly abi: ({
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
        name?: undefined;
        outputs?: undefined;
    } | {
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        stateMutability?: undefined;
        outputs?: undefined;
    } | {
        stateMutability: string;
        type: string;
        inputs?: undefined;
        anonymous?: undefined;
        name?: undefined;
        outputs?: undefined;
    } | {
        inputs: never[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: never[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
    })[];
    static createInterface(): TransparentUpgradeableProxyInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): TransparentUpgradeableProxy;
}
export {};
