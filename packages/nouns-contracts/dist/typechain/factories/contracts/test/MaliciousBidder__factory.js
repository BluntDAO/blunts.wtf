"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MaliciousBidder__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "contract INounsAuctionHouse",
                name: "auctionHouse",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "bid",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        stateMutability: "payable",
        type: "receive",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610106806100206000396000f3fe60806040526004361060205760003560e01c806359d667a514602b57600080fd5b36602657fe5b600080fd5b603a6036366004609a565b603c565b005b60405163196774ad60e21b8152600481018290526001600160a01b0383169063659dd2b49034906024016000604051808303818588803b158015607e57600080fd5b505af11580156091573d6000803e3d6000fd5b50505050505050565b6000806040838503121560ac57600080fd5b82356001600160a01b038116811460c257600080fd5b94602093909301359350505056fea26469706673582212201c6401ab2d1272997572c5ea8dbefa99b84ea9b46b876053d95c047f37a813fa64736f6c63430008130033";
const isSuperArgs = (xs) => xs.length > 1;
class MaliciousBidder__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.MaliciousBidder__factory = MaliciousBidder__factory;
MaliciousBidder__factory.bytecode = _bytecode;
MaliciousBidder__factory.abi = _abi;
